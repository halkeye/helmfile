alertmanager:
  persistentVolume:
    storageClass: longhorn
  ingress:
    enabled: true
    hosts:
      - alertmanager.int.g4v.dev
    tls:
      - secretName: prometheus-alertmanager-tls
        hosts:
          - alertmanager.int.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"

#extraScrapeConfigs: |
#  - job_name: 'raspberrypi'
#    scheme: http
#    metrics_path: '/metrics'
#    static_configs:
#      - targets: ['raspberrypi.dhcp.home:9243']
server:
  persistentVolume:
    storageClass: longhorn
  ingress:
    enabled: true
    hosts:
      - prometheus.int.g4v.dev
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.int.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"

pushgateway:
  persistentVolume:
    storageClass: longhorn
  ingress:
    enabled: true
    hosts:
      - pushgateway.int.g4v.dev
    tls:
      - secretName: prometheus-pushgateway-tls
        hosts:
          - pushgateway.int.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
#
#
# The Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:
# prometheus-pushgateway.default.svc.cluster.local

# Get the PushGateway URL by running these commands in the same shell:
#   export POD_NAME=$(kubectl get pods --namespace default -l "app=prometheus,component=pushgateway" -o jsonpath="{.items[0].metadata.name}")
#   kubectl --namespace default port-forward $POD_NAME 9091
#
kubeStateMetrics:
  enabled: false


serverFiles:
  alerting_rules.yml:
    groups:
      - name: Instances
        rules:
          - alert: InstanceDown
            expr: up == 0
            for: 5m
            labels:
              severity: page
            annotations:
              description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.'
              summary: 'Instance {{ $labels.instance }} down'
          - alert: Pods Down
            expr: sum(kube_pod_status_phase{phase !~ "Running|Succeeded"}) by (phase) > 0
            for: 5m
            labels:
              severity: page
            annotations:
              description: 'Bad pods for more than than 5 minutes.'
              summary: 'Instance {{ $labels.instance }} down'
          - alert: Unused PV
            expr: sum(kube_persistentvolume_status_phase{phase!~"Bound"}) by (phase) > 0
            for: 5m
            labels:
              severity: page
            annotations:
              description: 'Unused pv for more than than 5 minutes.'
              summary: 'Unused PV'
          - alert: Broken PVC
            expr: sum(kube_persistentvolumeclaim_status_phase{phase!~"Bound"}) by (phase) > 0
            for: 5m
            labels:
              severity: page
            annotations:
              summary: 'Broken PVC(s)'
