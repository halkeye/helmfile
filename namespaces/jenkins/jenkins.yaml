---
persistence:
  enabled: true
  storageClass: longhorn

agent:
  volumes:
    - type: HostPath
      #volumeName: docker-sock
      hostPath: /var/run/docker.sock
      mountPath: /var/run/docker.sock

controller:
  healthProbeReadinessFailureThreshold: 90
  healthProbeLivenessFailureThreshold: 90
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - jenkins
          topologyKey: "kubernetes.io/hostname"
  jenkinsAdminEmail: jenkins@g4v.dev
  serviceType: ClusterIP
  serviceAnnotations:
    prometheus.io/path: /prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  image: halkeye/jenkins
  tag: "aafcd5"

  resources:
    requests:
      cpu: "2000m"
      memory: "1000Mi"
    limits:
      cpu: "4000m"
      memory: "4096Mi"

  ingress:
    enabled: true
    hostName: ci.g4v.dev
    path: /
    tls:
      - secretName: ci-tls
        hosts:
          - ci.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 2000m

  numExecutors: 0
  overwriteConfig: false
  overwritePlugins: true
  installPlugins: false

  runAsUser: 1000
  fsGroup: 1000

  JCasC:
    defaultConfig: false
    configScripts:
      zzzcustom: |-
        security:
          queueItemAuthenticator:
            authenticators:
              - global:
                  strategy: "triggeringUsersAuthorizationStrategy"
        jenkins:
          remotingSecurity:
            enabled: true
          disableRememberMe: false
          agentProtocols:
            - "JNLP4-connect"
            - "Ping"
          authorizationStrategy:
            projectMatrix:
              permissions:
              - "Agent/Build:anonymous"
              - "Job/Discover:anonymous"
              - "Overall/Administer:halkeye"
              - "Overall/Read:anonymous"
              - "Overall/Read:authenticated"
          markupFormatter: "markdownFormatter"
          securityRealm:
            oic:
              authorizationServerUrl: "https://keycloak.g4v.dev/auth/realms/${OIC_AUTH_REALM}/protocol/openid-connect/auth"
              clientId: "${OIC_AUTH_CLIENT_ID}"
              clientSecret: "${OIC_AUTH_CLIENT_SECRET}"
              disableSslVerification: false
              endSessionEndpoint: "https://keycloak.g4v.dev/auth/realms/${OIC_AUTH_REALM}/protocol/openid-connect/logout"
              escapeHatchEnabled: false
              logoutFromOpenidProvider: true
              scopes: "web-origins address phone openid roles profile offline_access microprofile-jwt email"
              tokenServerUrl: "https://keycloak.g4v.dev/auth/realms/${OIC_AUTH_REALM}/protocol/openid-connect/token"
              userInfoServerUrl: "https://keycloak.g4v.dev/auth/realms/${OIC_AUTH_REALM}/protocol/openid-connect/userinfo"
              # wellKnownOpenIDConfigurationUrl: "https://keycloak.g4v.dev/auth/realms/${OIC_AUTH_REALM}/.well-known/openid-configuration"
              userNameField: "preferred_username"
              emailFieldName: "email"
              fullNameFieldName: "name"
              groupsFieldName: "group-membership"
          numExecutors: 0
          clouds:
            - digitalOcean:
                authTokenCredentialId: halkeye-digitalocean
                privateKeyCredentialId: halkeye-digitalocean-sshkey
                connectionRetryWait: 10
                instanceCap: 5
                name: "dojenkins"
                sshKeyId: 29638582
                templates:
                - idleTerminationInMinutes: 10
                  installMonitoring: false
                  instanceCap: 2
                  labellessJobsAllowed: false
                  # doctl compute image list | grep 71801581
                  # 72401866    Docker 19.03.12 on Ubuntu 20.04                                               snapshot    Ubuntu           docker-20-04                                 true      25
                  imageId: "72401866"
                  name: "agent"
                  numExecutors: 1
                  regionId: "tor1"
                  setupPrivateNetworking: false
                  sizeId: "s-2vcpu-2gb"
                  sshPort: 22
                  username: "root"
                  workspacePath: "/jenkins/"
                timeoutMinutes: 5
                usePrivateNetworking: false
            - kubernetes:
                containerCapStr: "3"
                jenkinsTunnel: "jenkins-agent:50000"
                jenkinsUrl: "http://jenkins:8080"
                maxRequestsPerHostStr: "32"
                name: "kubernetes"
                namespace: "jenkins"
                serverUrl: "https://kubernetes.default"
                templates:
                - containers:
                  - name: jnlp-linux
                    alwaysPullImage: true
                    image: "halkeye/jnlp-agent-docker:latest"
                    args: "^${computer.jnlpmac} ^${computer.name}"
                    envVars:
                    - envVar:
                        key: "JENKINS_URL"
                        value: "http://jenkins.jenkins.svc.cluster.local:8080"
                    runAsGroup: "999"
                    runAsUser: "1000"
                    livenessProbe:
                      failureThreshold: 0
                      initialDelaySeconds: 0
                      periodSeconds: 0
                      successThreshold: 0
                      timeoutSeconds: 0
                    name: "jnlp"
                    privileged: true
                    resourceLimitCpu: "2.0"
                    resourceLimitMemory: "2048Mi"
                    resourceRequestCpu: "1.0"
                    resourceRequestMemory: "1024Mi"
                    ttyEnabled: false
                    workingDir: "/home/jenkins/agent"
                  hostNetwork: false
                  idleMinutes: 30
                  idleMinutesStr: "30"
                  label: "jenkins-agent"
                  name: "default"
                  namespace: "jenkins"
                  nodeUsageMode: "NORMAL"
                  podRetention: "onFailure"
                  serviceAccount: "default"
                  workspaceVolume:
                    emptyDirWorkspaceVolume:
                      memory: true
                  volumes:
                   - hostPathVolume:
                       hostPath: "/var/run/docker.sock"
                       mountPath: "/var/run/docker.sock"
                  yaml: |
                    spec:
                      dnsConfig:
                        options:
                          - name: ndots
                            value: "1"
                  yamlMergeStrategy: "override"
          crumbIssuer:
            standard:
              excludeClientIPFromCrumb: true
        unclassified:
          bitbucketEndpointConfiguration:
            endpoints:
            - bitbucketCloudEndpoint:
                credentialsId: "bitbucket-halkeye"
                enableCache: false
                manageHooks: true
                repositoriesCacheDuration: 0
                teamCacheDuration: 0
          location:
            adminAddress: "jenkins@g4v.dev"
            url: "https://ci.g4v.dev/"
          email-ext:
            defaultReplyTo: "jenkins@g4v.dev"
            mailAccount:
              smtpPort: "25"
              smtpHost: "${SMTP_SERVER}"
          gitHubPluginConfig:
            configs:
              - credentialsId: "github-admin-halkeye"
            hookUrl: "https://ci.g4v.dev/github-webhook/"
          mailer:
            replyToAddress: "jenkins@g4v.dev"
            smtpHost: "${SMTP_SERVER}"
            smtpPort: "25"
          buildDiscarders:
            configuredBuildDiscarders:
              - "jobBuildDiscarder"
              - simpleBuildDiscarder:
                  discarder:
                    logRotator:
                      numToKeepStr: "5"
          themeManager:
            disableUserThemes: false
            theme: "darkSystem"
          globalDefaultFlowDurabilityLevel:
            durabilityHint: PERFORMANCE_OPTIMIZED
          globalLibraries:
            libraries:
              - name: "github.com/halkeye/jenkins-shared-library"
                implicit: true
                defaultVersion: "master"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        credentialsId: "github-app"
                        id: "29f65a8c-bc76-4fba-bddc-ac27fa04ccf4"
                        remote: "https://github.com/halkeye/jenkins-shared-library"
        credentials:
          system:
            domainCredentials:
              - credentials:
                - gitHubApp:
                    appID: "74743"
                    description: "GitHub app - github-app"
                    id: "github-app"
                    privateKey: "${GITHUB_APP_KEY}"
                    owner: "halkeye"
                - gitHubApp:
                    appID: "74743"
                    description: "GitHub app"
                    description: "GitHub app - github-app-halkeye"
                    id: "github-app-halkeye"
                    privateKey: "${GITHUB_APP_KEY}"
                    owner: "halkeye"
                - gitHubApp:
                    appID: "74743"
                    description: "GitHub app - github-app-halkeye-docker"
                    id: "github-app-halkeye-docker"
                    privateKey: "${GITHUB_APP_KEY}"
                    owner: "halkeye-docker"
                - gitHubApp:
                    appID: "74743"
                    description: "GitHub app - github-app-halkeye-helm-charts"
                    id: "github-app-halkeye-helm-charts"
                    privateKey: "${GITHUB_APP_KEY}"
                    owner: "halkeye-helm-charts"
                - usernamePassword:
                    id: bitbucket-halkeye
                    username: halkeye
                    password: "${BITBUCKET_HALKEYE_PASSWORD}"
                - usernamePassword:
                    id: contentful-halkeye
                    username: "${CONTENTFUL_HALKEYE_USERNAME}"
                    password: "${CONTENTFUL_HALKEYE_PASSWORD}"
                - usernamePassword:
                    id: dockerhub-halkeye
                    username: "${DOCKERHUB_HALKEYE_USERNAME}"
                    password: "${DOCKERHUB_HALKEYE_PASSWORD}"
                - string:
                    id: modio-halkeye
                    secret: "${MODIO_HALKEYE_ACCESS_TOKEN}"
                - string:
                    id: halkeye-digitalocean
                    secret: "${DIGITAL_OCEAN_TOKEN}"
                - basicSSHUserPrivateKey:
                    id: halkeye-digitalocean-sshkey
                    privateKeySource:
                      directEntry:
                        privateKey: "${DIGITAL_OCEAN_SSH_KEY}"
                - string:
                    id: github-admin-halkeye
                    secret: "${GITHUB_ADMIN_HALKEYE_SECRET}"
                - usernamePassword:
                    id: github-halkeye
                    username: "${GITHUB_HALKEYE_USERNAME}"
                    password: "${GITHUB_HALKEYE_PASSWORD}"
                - string:
                    id: github-halkeye-react-book-reader
                    secret: "${GITHUB_HALKEYE_REACT_BOOK_READER_SECRET}"
                - usernamePassword:
                    id: goodreads
                    username: "${GOODREADS_USERNAME}"
                    password: "${GOODREADS_PASSWORD}"
                - basicSSHUserPrivateKey:
                    id: halkeye-bitbucket
                    passphrase: "${HALKEYE_BITUCKET_PASSPHRASE}"
                    privateKeySource:
                      directEntry:
                        privateKey: "${HALKEYE_BITUCKET_KEY}"
                    username: "${HALKEYE_BITUCKET_USERNAME}"
                - usernamePassword:
                    id: halkeye-quay
                    username: "${HALKEYE_QUAY_USERNAME}"
                    password: "${HALKEYE_QUAY_PASSWORD}"
                - usernamePassword:
                    id: halkeye-surge
                    username: "${HALKEYE_SURGE_USERNAME}"
                    password: "${HALKEYE_SURGE_PASSWORD}"
                - string:
                    id: netlify-gavinmogan
                    secret: "${GITHUB_NETLIFY_GAVINMOGAN_SECRET}"
                - usernamePassword:
                    id: sauce-minecraft-gavinmogan
                    username: "${SAUCE_MINECRAFT_GAVINMOGAN_USERNAME}"
                    password: "${SAUCE_MINECRAFT_GAVINMOGAN_PASSWORD}"
        jobs:
          - url: https://raw.githubusercontent.com/halkeye/jenkins-jobs/master/jobs.groovy
  sidecars:
    configAutoReload:
      enabled: true

rbac:
  create: true
  readSecrets: true

